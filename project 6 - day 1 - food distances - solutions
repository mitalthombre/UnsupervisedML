{"cells":[{"cell_type":"markdown","id":"dbeb1d7a-1935-4458-a397-e0df785e0c24","metadata":{"id":"dbeb1d7a-1935-4458-a397-e0df785e0c24"},"source":["# Unsupervised ML\n","\n","This workshop is divided in three main parts, and contains a recap of the 10 songs on the platform: \n","\n","1. Concept of distances (Day 1)\n","2. K-means algorithm (Day 2)\n","3. Recap: example 10 spotify songs\n","4. Model performance evaluation (Day 3)\n","\n","## Distances\n","\n","### Manhattan distance"]},{"cell_type":"code","execution_count":null,"id":"c5b8f705-7140-44f2-b9c1-cb4e7c69985b","metadata":{"id":"c5b8f705-7140-44f2-b9c1-cb4e7c69985b"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":null,"id":"35b7052e-70d2-43d2-bc33-2662615c2a92","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"35b7052e-70d2-43d2-bc33-2662615c2a92","executionInfo":{"status":"ok","timestamp":1668431241607,"user_tz":-60,"elapsed":253,"user":{"displayName":"Monika Toscher","userId":"02731714738449478419"}},"outputId":"c5e1f494-5401-4cdb-a23e-1dfda5a9743b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              broccoli  brussels_sprouts  hamburger  oysters (raw)  \\\n","student                                                              \n","Akbar                7                 0          5              1   \n","Andreas              7                 7          7              0   \n","Dónal                8                 6          8              5   \n","Hana                 2                 8          8              8   \n","Konstantinos         7                 7          1             10   \n","Kristina             9                 8          0              0   \n","Sabrina              6                 0         10              1   \n","Sandrine            10                 2          8              1   \n","Sevgi                6                 2          9              0   \n","Rias                 8                 6          8              5   \n","\n","              onion (raw)  peas  olives  blue_cheese  whisky  \n","student                                                       \n","Akbar                   3     4       8            8       7  \n","Andreas                 7     3       3            5       7  \n","Dónal                   1     5       8           10      10  \n","Hana                    0     7       9            8       7  \n","Konstantinos           10     8      10            2       7  \n","Kristina                7     7       9            2       7  \n","Sabrina                 8     0      10            1       5  \n","Sandrine                5     8      10           10       0  \n","Sevgi                   5     7      10            1       0  \n","Rias                    0     6       8            8      10  "],"text/html":["\n","  <div id=\"df-09efd1b3-7468-4ce6-9fd4-b695613e8637\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09efd1b3-7468-4ce6-9fd4-b695613e8637')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-09efd1b3-7468-4ce6-9fd4-b695613e8637 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-09efd1b3-7468-4ce6-9fd4-b695613e8637');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["sheet_id = '13n9SfqHIyzPHXzdPK0zqRE3gGfwkwe2vb9_ZjYYRpr8'\n","sheet_name = 'DS003'\n","url =  f'https://docs.google.com/spreadsheets/d/{sheet_id}/gviz/tq?tqx=out:csv&sheet={sheet_name}'\n","\n","df = pd.read_csv(url, index_col='student', nrows=10)\n","df.drop(['age','favorite_color'], axis=1, inplace=True)\n","df"]},{"cell_type":"code","execution_count":null,"id":"e28ed9e1-945f-4d2e-a1ac-02799b44de72","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"e28ed9e1-945f-4d2e-a1ac-02799b44de72","executionInfo":{"status":"ok","timestamp":1658152131014,"user_tz":-120,"elapsed":3,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"fc5b2f38-695e-4251-a102-e4a189c6a526"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-fc64a4c1-78cb-4856-88da-25d0225e2723\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc64a4c1-78cb-4856-88da-25d0225e2723')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc64a4c1-78cb-4856-88da-25d0225e2723 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc64a4c1-78cb-4856-88da-25d0225e2723');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}],"source":["# example Mahattan distance\n","# between user 1 and 2\n","\n","sample = pd.DataFrame({\n","    'broccoli':[5, 8],\n","    'brussels_sprouts':[5, 7],\n","    'hamburger':[4, 9]\n","    }, \n","    index=['student_1','student_2']\n",")\n","\n","# sample = df.iloc[0:2,0:3]\n","sample"]},{"cell_type":"markdown","id":"ed72f925-55a7-47e9-944b-86d73cdc6921","metadata":{"id":"ed72f925-55a7-47e9-944b-86d73cdc6921"},"source":["#### Example 1: 2 students with 2 ratings"]},{"cell_type":"code","execution_count":null,"id":"c3667aef-67ab-470e-bbba-837ccd59f51d","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"c3667aef-67ab-470e-bbba-837ccd59f51d","executionInfo":{"status":"ok","timestamp":1658152133012,"user_tz":-120,"elapsed":519,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"08daa887-ecab-44f8-84d6-5c1337f21bb0"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# plot the manhattan distance between two points\n","# plot rattings\n","plt.scatter(sample['broccoli'], sample['brussels_sprouts'], s=200)\n","\n","# # possibility 1 manhattan distance\n","y = [5, 5, 7]\n","x = [5, 8, 8]\n","plt.plot(x, y, c='r')\n","\n","# # possibility 2 manhattan distance\n","y = [5, 7, 7]\n","x = [5, 5, 8]\n","plt.plot(x, y, c='y')\n","\n","# plt.xlim(-1, 11)\n","# plt.ylim(-1, 11)\n","plt.title('Manhattan distance from broccoli rating to brussel sprouts rating')\n","plt.xlabel('Broccoli rating')\n","plt.ylabel('Brussels sprouts rating')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"04ecb6f2-82f5-4000-8c4b-ebae5b0e2fba","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"04ecb6f2-82f5-4000-8c4b-ebae5b0e2fba","executionInfo":{"status":"ok","timestamp":1658152134702,"user_tz":-120,"elapsed":4,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"773b8258-c557-4873-affa-d06a5363e44a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-5f992973-a312-442b-8d26-ecadcd9fec6a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f992973-a312-442b-8d26-ecadcd9fec6a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5f992973-a312-442b-8d26-ecadcd9fec6a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5f992973-a312-442b-8d26-ecadcd9fec6a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}],"source":["sample"]},{"cell_type":"markdown","id":"6f1a919f-ce2c-49a0-86a3-a196e33a84bb","metadata":{"id":"6f1a919f-ce2c-49a0-86a3-a196e33a84bb"},"source":["#### Example 2: Distance between 2 students with 3 ratings"]},{"cell_type":"code","execution_count":null,"id":"f3ec42ab-73f6-4842-becf-2eccadbb732d","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f3ec42ab-73f6-4842-becf-2eccadbb732d","executionInfo":{"status":"ok","timestamp":1658152136026,"user_tz":-120,"elapsed":2,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"dc81ce64-d128-4188-fed7-d692af5f07d0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":7}],"source":["# distance user 1 and user 2 for broccoli\n","md_m1_users1to2 = abs(sample.iloc[0,0] - sample.iloc[1,0])\n","md_m1_users1to2"]},{"cell_type":"code","execution_count":null,"id":"79caba16-cfe3-4078-9215-9682b962b953","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"79caba16-cfe3-4078-9215-9682b962b953","executionInfo":{"status":"ok","timestamp":1658152136594,"user_tz":-120,"elapsed":1,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"889c2b82-7e37-40b4-9d25-4c781ba969df"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":8}],"source":["# distance user 1 and user 2 for brussel_sprouts\n","md_m2_users1to2 = abs(sample.iloc[0,1] - sample.iloc[1,1])\n","md_m2_users1to2"]},{"cell_type":"code","execution_count":null,"id":"870a2e8d-ff77-4a75-b421-fb608705ef99","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"870a2e8d-ff77-4a75-b421-fb608705ef99","executionInfo":{"status":"ok","timestamp":1658152137378,"user_tz":-120,"elapsed":5,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"3f6ed019-bb16-4ae0-a98d-285588c07348"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":9}],"source":["# distance user 1 and user 2 for hamburguer\n","md_m3_users1to2 = abs(sample.iloc[0,2] - sample.iloc[1,2])\n","md_m3_users1to2"]},{"cell_type":"code","execution_count":null,"id":"2781320e-52ea-4ca6-a922-39d0358fad8a","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2781320e-52ea-4ca6-a922-39d0358fad8a","executionInfo":{"status":"ok","timestamp":1658152137932,"user_tz":-120,"elapsed":5,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"11254521-2cc3-4710-cf35-b2ad3fb43d2a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":10}],"source":["# and now to calculate the distance between both users, it will be\n","md_users1to2 = md_m1_users1to2 + md_m2_users1to2 + md_m3_users1to2\n","md_users1to2"]},{"cell_type":"code","execution_count":null,"id":"f512496e-b7a3-45dc-917a-a05b6f80ddb8","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"f512496e-b7a3-45dc-917a-a05b6f80ddb8","executionInfo":{"status":"ok","timestamp":1658152139173,"user_tz":-120,"elapsed":831,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"de2d4923-ed57-4fd6-b9f2-d9e9b55e3d58"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# how can we visualize that?\n","import matplotlib.pyplot as plt\n","from mpl_toolkits.mplot3d import Axes3D\n","\n","fig = plt.figure()\n","ax = fig.add_subplot(111, projection='3d')\n","plt.title('Student 1 and student 2 rating positions')\n","i,j,k = (   [sample.iloc[0,0],sample.iloc[1,0],sample.iloc[1,0],sample.iloc[1,0]],\n","            [sample.iloc[0,1],sample.iloc[0,1],sample.iloc[1,1],sample.iloc[1,1]],\n","            [sample.iloc[0,2],sample.iloc[0,2],sample.iloc[0,2],sample.iloc[1,2]] )\n","ax.plot(i,j,k,color='red')\n","ax.text(6.5,5,4, md_m1_users1to2)\n","ax.text(8,6,4, md_m2_users1to2)\n","ax.text(8,7,6, md_m3_users1to2)\n","ax.scatter(xs=sample['broccoli'], ys=sample['brussels_sprouts'], zs=sample['hamburger'])\n","plt.show()"]},{"cell_type":"markdown","id":"ce67a2c8-4d22-4344-97aa-916583064832","metadata":{"id":"ce67a2c8-4d22-4344-97aa-916583064832"},"source":["#### CHALLENGE: Calculating Manhattan distance between all the students for three foods"]},{"cell_type":"code","execution_count":null,"id":"eb0e82c6-0315-4654-99e7-7607435d25b4","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"eb0e82c6-0315-4654-99e7-7607435d25b4","executionInfo":{"status":"ok","timestamp":1658152142883,"user_tz":-120,"elapsed":790,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"3b1999f8-c0fd-4321-fb79-bbe5f0d8fb47"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# how can we visualize that?\n","fig = plt.figure()\n","ax = fig.add_subplot(111, projection='3d')\n","plt.title('Broccoli, brussel_sprouts and hamburguer ratings')\n","ax.scatter(xs=df['broccoli'], ys=df['brussels_sprouts'], zs=df['hamburger'])\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"48cde439-7431-4ff1-90b8-8e3a25e54999","metadata":{"tags":[],"colab":{"base_uri":"https://localhost:8080/"},"id":"48cde439-7431-4ff1-90b8-8e3a25e54999","executionInfo":{"status":"ok","timestamp":1658152145691,"user_tz":-120,"elapsed":959,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"6ade3b19-9d45-417c-ecac-4da36ff7548c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Akbar ratings for broccoli: 7, brussel_sprouts: 0 and hamburger 5\n","The distance between Akbar and Akbar is 0\n","The distance between Akbar and Andreas is 9\n","The distance between Akbar and Dónal is 10\n","The distance between Akbar and Hana is 16\n","The distance between Akbar and Konstantinos is 11\n","The distance between Akbar and Kristina is 15\n","The distance between Akbar and Sabrina is 6\n","The distance between Akbar and Sandrine is 8\n","The distance between Akbar and Sevgi is 7\n","The distance between Akbar and Rias is 10\n","The distances from Akbar are [0, 9, 10, 16, 11, 15, 6, 8, 7, 10]\n","Andreas ratings for broccoli: 7, brussel_sprouts: 7 and hamburger 7\n","The distance between Andreas and Akbar is 9\n","The distance between Andreas and Andreas is 0\n","The distance between Andreas and Dónal is 3\n","The distance between Andreas and Hana is 7\n","The distance between Andreas and Konstantinos is 6\n","The distance between Andreas and Kristina is 10\n","The distance between Andreas and Sabrina is 11\n","The distance between Andreas and Sandrine is 9\n","The distance between Andreas and Sevgi is 8\n","The distance between Andreas and Rias is 3\n","The distances from Andreas are [9, 0, 3, 7, 6, 10, 11, 9, 8, 3]\n","Dónal ratings for broccoli: 8, brussel_sprouts: 6 and hamburger 8\n","The distance between Dónal and Akbar is 10\n","The distance between Dónal and Andreas is 3\n","The distance between Dónal and Dónal is 0\n","The distance between Dónal and Hana is 8\n","The distance between Dónal and Konstantinos is 9\n","The distance between Dónal and Kristina is 11\n","The distance between Dónal and Sabrina is 10\n","The distance between Dónal and Sandrine is 6\n","The distance between Dónal and Sevgi is 7\n","The distance between Dónal and Rias is 0\n","The distances from Dónal are [10, 3, 0, 8, 9, 11, 10, 6, 7, 0]\n","Hana ratings for broccoli: 2, brussel_sprouts: 8 and hamburger 8\n","The distance between Hana and Akbar is 16\n","The distance between Hana and Andreas is 7\n","The distance between Hana and Dónal is 8\n","The distance between Hana and Hana is 0\n","The distance between Hana and Konstantinos is 13\n","The distance between Hana and Kristina is 15\n","The distance between Hana and Sabrina is 14\n","The distance between Hana and Sandrine is 14\n","The distance between Hana and Sevgi is 11\n","The distance between Hana and Rias is 8\n","The distances from Hana are [16, 7, 8, 0, 13, 15, 14, 14, 11, 8]\n","Konstantinos ratings for broccoli: 7, brussel_sprouts: 7 and hamburger 1\n","The distance between Konstantinos and Akbar is 11\n","The distance between Konstantinos and Andreas is 6\n","The distance between Konstantinos and Dónal is 9\n","The distance between Konstantinos and Hana is 13\n","The distance between Konstantinos and Konstantinos is 0\n","The distance between Konstantinos and Kristina is 4\n","The distance between Konstantinos and Sabrina is 17\n","The distance between Konstantinos and Sandrine is 15\n","The distance between Konstantinos and Sevgi is 14\n","The distance between Konstantinos and Rias is 9\n","The distances from Konstantinos are [11, 6, 9, 13, 0, 4, 17, 15, 14, 9]\n","Kristina ratings for broccoli: 9, brussel_sprouts: 8 and hamburger 0\n","The distance between Kristina and Akbar is 15\n","The distance between Kristina and Andreas is 10\n","The distance between Kristina and Dónal is 11\n","The distance between Kristina and Hana is 15\n","The distance between Kristina and Konstantinos is 4\n","The distance between Kristina and Kristina is 0\n","The distance between Kristina and Sabrina is 21\n","The distance between Kristina and Sandrine is 15\n","The distance between Kristina and Sevgi is 18\n","The distance between Kristina and Rias is 11\n","The distances from Kristina are [15, 10, 11, 15, 4, 0, 21, 15, 18, 11]\n","Sabrina ratings for broccoli: 6, brussel_sprouts: 0 and hamburger 10\n","The distance between Sabrina and Akbar is 6\n","The distance between Sabrina and Andreas is 11\n","The distance between Sabrina and Dónal is 10\n","The distance between Sabrina and Hana is 14\n","The distance between Sabrina and Konstantinos is 17\n","The distance between Sabrina and Kristina is 21\n","The distance between Sabrina and Sabrina is 0\n","The distance between Sabrina and Sandrine is 8\n","The distance between Sabrina and Sevgi is 3\n","The distance between Sabrina and Rias is 10\n","The distances from Sabrina are [6, 11, 10, 14, 17, 21, 0, 8, 3, 10]\n","Sandrine ratings for broccoli: 10, brussel_sprouts: 2 and hamburger 8\n","The distance between Sandrine and Akbar is 8\n","The distance between Sandrine and Andreas is 9\n","The distance between Sandrine and Dónal is 6\n","The distance between Sandrine and Hana is 14\n","The distance between Sandrine and Konstantinos is 15\n","The distance between Sandrine and Kristina is 15\n","The distance between Sandrine and Sabrina is 8\n","The distance between Sandrine and Sandrine is 0\n","The distance between Sandrine and Sevgi is 5\n","The distance between Sandrine and Rias is 6\n","The distances from Sandrine are [8, 9, 6, 14, 15, 15, 8, 0, 5, 6]\n","Sevgi ratings for broccoli: 6, brussel_sprouts: 2 and hamburger 9\n","The distance between Sevgi and Akbar is 7\n","The distance between Sevgi and Andreas is 8\n","The distance between Sevgi and Dónal is 7\n","The distance between Sevgi and Hana is 11\n","The distance between Sevgi and Konstantinos is 14\n","The distance between Sevgi and Kristina is 18\n","The distance between Sevgi and Sabrina is 3\n","The distance between Sevgi and Sandrine is 5\n","The distance between Sevgi and Sevgi is 0\n","The distance between Sevgi and Rias is 7\n","The distances from Sevgi are [7, 8, 7, 11, 14, 18, 3, 5, 0, 7]\n","Rias ratings for broccoli: 8, brussel_sprouts: 6 and hamburger 8\n","The distance between Rias and Akbar is 10\n","The distance between Rias and Andreas is 3\n","The distance between Rias and Dónal is 0\n","The distance between Rias and Hana is 8\n","The distance between Rias and Konstantinos is 9\n","The distance between Rias and Kristina is 11\n","The distance between Rias and Sabrina is 10\n","The distance between Rias and Sandrine is 6\n","The distance between Rias and Sevgi is 7\n","The distance between Rias and Rias is 0\n","The distances from Rias are [10, 3, 0, 8, 9, 11, 10, 6, 7, 0]\n"]}],"source":["# create a for loop to automate the previous process for all the students (only the first three columns)\n","manh_dist = []\n","\n","for student in df.index: \n","    \n","    # get the rating for the first three columns \n","    broccoli = df.loc[student][0]\n","    brussel_sprouts = df.loc[student][1]\n","    hamburguer = df.loc[student][2]\n","\n","    print(f'{student} ratings for broccoli: {broccoli}, brussel_sprouts: {brussel_sprouts} and hamburger {hamburguer}')\n","    \n","    student_distance = []\n","\n","    # now compare its ratings with everyone else: \n","    for student_to_compare in df.index:\n","        \n","        # get the ratings for the other students to compare\n","        broccoli_to_compare = df.loc[student_to_compare][0]\n","        brussel_sprouts_to_compare = df.loc[student_to_compare][1]\n","        hamburguer_to_compare = df.loc[student_to_compare][2]\n","        \n","        # look for the distances between both students\n","        broccoli_distance = abs(broccoli - broccoli_to_compare)\n","        brussel_sprouts_distance = abs(brussel_sprouts - brussel_sprouts_to_compare)\n","        hamburguer_distance = abs(hamburguer - hamburguer_to_compare)\n","        \n","        # summarise distance between both students\n","        distance = broccoli_distance + brussel_sprouts_distance + hamburguer_distance\n","        \n","        print(f'The distance between {student} and {student_to_compare} is {distance}')\n","        \n","        # store the distance\n","        student_distance.append(distance)\n","        \n","    # the list of distances of an specific student\n","    print(f'The distances from {student} are {student_distance}')\n","    \n","    # store the student distances in all the students distances\n","    manh_dist.append(student_distance)"]},{"cell_type":"code","execution_count":null,"id":"13739901-93a7-4b26-aa31-b0eba8a8ba8a","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":412},"id":"13739901-93a7-4b26-aa31-b0eba8a8ba8a","executionInfo":{"status":"ok","timestamp":1658152148045,"user_tz":-120,"elapsed":4,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"6311f60b-afb2-45f8-d5a2-ab66a3f26825"},"outputs":[{"output_type":"stream","name":"stdout","text":["Distances between students only looking at broccoli, brussel sprouts and hamburguer:\n"]},{"output_type":"execute_result","data":{"text/plain":["student       Akbar  Andreas  Dónal  Hana  Konstantinos  Kristina  Sabrina  \\\n","student                                                                      \n","Akbar             0        9     10    16            11        15        6   \n","Andreas           9        0      3     7             6        10       11   \n","Dónal            10        3      0     8             9        11       10   \n","Hana             16        7      8     0            13        15       14   \n","Konstantinos     11        6      9    13             0         4       17   \n","Kristina         15       10     11    15             4         0       21   \n","Sabrina           6       11     10    14            17        21        0   \n","Sandrine          8        9      6    14            15        15        8   \n","Sevgi             7        8      7    11            14        18        3   \n","Rias             10        3      0     8             9        11       10   \n","\n","student       Sandrine  Sevgi  Rias  \n","student                              \n","Akbar                8      7    10  \n","Andreas              9      8     3  \n","Dónal                6      7     0  \n","Hana                14     11     8  \n","Konstantinos        15     14     9  \n","Kristina            15     18    11  \n","Sabrina              8      3    10  \n","Sandrine             0      5     6  \n","Sevgi                5      0     7  \n","Rias                 6      7     0  "],"text/html":["\n","  <div id=\"df-598e360c-bea5-4660-b137-29fd395c827c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>student</th>\n","      <th>Akbar</th>\n","      <th>Andreas</th>\n","      <th>Dónal</th>\n","      <th>Hana</th>\n","      <th>Konstantinos</th>\n","      <th>Kristina</th>\n","      <th>Sabrina</th>\n","      <th>Sandrine</th>\n","      <th>Sevgi</th>\n","      <th>Rias</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>16</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>11</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>16</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>11</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>9</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>17</td>\n","      <td>15</td>\n","      <td>14</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>15</td>\n","      <td>10</td>\n","      <td>11</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>21</td>\n","      <td>15</td>\n","      <td>18</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>6</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>14</td>\n","      <td>17</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>14</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>11</td>\n","      <td>14</td>\n","      <td>18</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>7</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-598e360c-bea5-4660-b137-29fd395c827c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-598e360c-bea5-4660-b137-29fd395c827c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-598e360c-bea5-4660-b137-29fd395c827c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}],"source":["# the result of looking for all distances\n","print('Distances between students only looking at broccoli, brussel sprouts and hamburguer:')\n","manh_dist = pd.DataFrame(manh_dist, columns=df.index, index=df.index)\n","manh_dist"]},{"cell_type":"code","execution_count":null,"id":"b29ae84d-2a4a-4806-b419-ea415f78dfab","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"b29ae84d-2a4a-4806-b419-ea415f78dfab","executionInfo":{"status":"ok","timestamp":1658152150959,"user_tz":-120,"elapsed":988,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"4c18feba-0dd7-40a5-897a-873d378bee4a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import seaborn as sns\n","\n","plt.subplots(figsize=(12, 8))\n","sns.heatmap(manh_dist)\n","plt.show()"]},{"cell_type":"markdown","id":"d00b8331-b2f9-49fc-a0f6-e93a04237d4a","metadata":{"id":"d00b8331-b2f9-49fc-a0f6-e93a04237d4a"},"source":["#### Calculating distances for all the foods\n","\n","##### Review list comprehensions"]},{"cell_type":"code","execution_count":null,"id":"3b74a781-9080-446a-94f0-9624c33d840e","metadata":{"id":"3b74a781-9080-446a-94f0-9624c33d840e"},"outputs":[],"source":["temp_list = [1, 2, 3, 4]\n","# add 1 to all this elements\n","\n","temp_list_plus_1 = []\n","for num in temp_list: \n","    temp_list_plus_1.append(num + 1)"]},{"cell_type":"code","execution_count":null,"id":"2aa23571-1d40-4f06-aaa4-205c16bdc4aa","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2aa23571-1d40-4f06-aaa4-205c16bdc4aa","executionInfo":{"status":"ok","timestamp":1658152153734,"user_tz":-120,"elapsed":3,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"797edc20-9db7-4a27-eaa7-2e97b3d28232"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 3, 4, 5]"]},"metadata":{},"execution_count":17}],"source":["temp_list_plus_1"]},{"cell_type":"code","execution_count":null,"id":"0fe1edba-dbd1-4e8b-a3d3-89427514c311","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0fe1edba-dbd1-4e8b-a3d3-89427514c311","executionInfo":{"status":"ok","timestamp":1658152154144,"user_tz":-120,"elapsed":5,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"7ee7b086-ffa4-4c9a-84ed-991041976e28"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 3, 4, 5]"]},"metadata":{},"execution_count":18}],"source":["[num + 1 for num in temp_list]"]},{"cell_type":"markdown","id":"561c66ab-cbb2-4a89-8eb8-78e83ae9a8bc","metadata":{"id":"561c66ab-cbb2-4a89-8eb8-78e83ae9a8bc"},"source":["##### Apply list comprehensions"]},{"cell_type":"code","execution_count":null,"id":"f6160eb9-f6a0-4fc3-bd78-9b4ed70679b2","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"f6160eb9-f6a0-4fc3-bd78-9b4ed70679b2","executionInfo":{"status":"ok","timestamp":1658152156326,"user_tz":-120,"elapsed":402,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"c9f5f341-fad2-4495-91c3-0d9f1d8e3886"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["student       Akbar  Andreas  Dónal  Hana  Konstantinos  Kristina  Sabrina  \\\n","student                                                                      \n","Akbar             0       23     22    30            39        30       26   \n","Andreas          23        0     29    35            34        23       29   \n","Dónal            22       29      0    20            39        36       42   \n","Hana             30       35     20     0            33        36       46   \n","Konstantinos     39       34     39    33             0        19       39   \n","Kristina         30       23     36    36            19         0       34   \n","Sabrina          26       29     42    46            39        34        0   \n","Sandrine         25       36     29    37            44        35       33   \n","Sevgi            29       32     39    39            38        29       19   \n","Rias             22       29      4    16            37        34       42   \n","\n","student       Sandrine  Sevgi  Rias  \n","student                              \n","Akbar               25     29    22  \n","Andreas             36     32    29  \n","Dónal               29     39     4  \n","Hana                37     39    16  \n","Konstantinos        44     38    37  \n","Kristina            35     29    34  \n","Sabrina             33     19    42  \n","Sandrine             0     16    31  \n","Sevgi               16      0    37  \n","Rias                31     37     0  "],"text/html":["\n","  <div id=\"df-ee67951e-7a32-4455-a05c-46965b633ea2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>student</th>\n","      <th>Akbar</th>\n","      <th>Andreas</th>\n","      <th>Dónal</th>\n","      <th>Hana</th>\n","      <th>Konstantinos</th>\n","      <th>Kristina</th>\n","      <th>Sabrina</th>\n","      <th>Sandrine</th>\n","      <th>Sevgi</th>\n","      <th>Rias</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0</td>\n","      <td>23</td>\n","      <td>22</td>\n","      <td>30</td>\n","      <td>39</td>\n","      <td>30</td>\n","      <td>26</td>\n","      <td>25</td>\n","      <td>29</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>23</td>\n","      <td>0</td>\n","      <td>29</td>\n","      <td>35</td>\n","      <td>34</td>\n","      <td>23</td>\n","      <td>29</td>\n","      <td>36</td>\n","      <td>32</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>22</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>39</td>\n","      <td>36</td>\n","      <td>42</td>\n","      <td>29</td>\n","      <td>39</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>30</td>\n","      <td>35</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>33</td>\n","      <td>36</td>\n","      <td>46</td>\n","      <td>37</td>\n","      <td>39</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>39</td>\n","      <td>34</td>\n","      <td>39</td>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>19</td>\n","      <td>39</td>\n","      <td>44</td>\n","      <td>38</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>30</td>\n","      <td>23</td>\n","      <td>36</td>\n","      <td>36</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>35</td>\n","      <td>29</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>26</td>\n","      <td>29</td>\n","      <td>42</td>\n","      <td>46</td>\n","      <td>39</td>\n","      <td>34</td>\n","      <td>0</td>\n","      <td>33</td>\n","      <td>19</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>25</td>\n","      <td>36</td>\n","      <td>29</td>\n","      <td>37</td>\n","      <td>44</td>\n","      <td>35</td>\n","      <td>33</td>\n","      <td>0</td>\n","      <td>16</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>29</td>\n","      <td>32</td>\n","      <td>39</td>\n","      <td>39</td>\n","      <td>38</td>\n","      <td>29</td>\n","      <td>19</td>\n","      <td>16</td>\n","      <td>0</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>22</td>\n","      <td>29</td>\n","      <td>4</td>\n","      <td>16</td>\n","      <td>37</td>\n","      <td>34</td>\n","      <td>42</td>\n","      <td>31</td>\n","      <td>37</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee67951e-7a32-4455-a05c-46965b633ea2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee67951e-7a32-4455-a05c-46965b633ea2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee67951e-7a32-4455-a05c-46965b633ea2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}],"source":["# can you do the same process than before for all the columns?\n","# create a function to do it for all the users\n","def manhattan_distance(data, student, student_to_compare): \n","    distance = (\n","        pd.DataFrame({\n","            'student_1':data.loc[student,:],\n","            'student_2':data.loc[student_to_compare,:]\n","        })\n","        # applying the formula\n","        .assign(dist_abs = lambda x: abs(x.student_1 - x.student_2))\n","        .agg({'dist_abs':'sum'})[0]\n","    )\n","    return distance\n","\n","distances = [[manhattan_distance(df, student, student_to_compare) for student in df.index] for student_to_compare in df.index]\n","manh_dist = pd.DataFrame(distances, columns=df.index, index=df.index)\n","manh_dist"]},{"cell_type":"code","execution_count":null,"id":"9863a077-e816-4ed6-824d-bdd9179b154c","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"9863a077-e816-4ed6-824d-bdd9179b154c","executionInfo":{"status":"ok","timestamp":1658152160675,"user_tz":-120,"elapsed":442,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"9a13193a-45b2-4252-e896-30b4446e5af9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff2948d2810>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.subplots(figsize=(12, 8))\n","sns.heatmap(manh_dist)"]},{"cell_type":"markdown","id":"fa327928-7db8-40e2-9ffb-20a8294557b7","metadata":{"id":"fa327928-7db8-40e2-9ffb-20a8294557b7"},"source":["### Euclidean distance\n","\n","Euclidean distance: \n","\n","$$d = \\sqrt {\\left( {x_1 - x_2 } \\right)^2 + \\left( {y_1 - y_2 } \\right)^2 }$$"]},{"cell_type":"code","execution_count":null,"id":"dbda01aa-a902-4fd4-899a-cecb5deee63c","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"dbda01aa-a902-4fd4-899a-cecb5deee63c","executionInfo":{"status":"ok","timestamp":1658152163278,"user_tz":-120,"elapsed":377,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"1fab53dc-8800-410a-f265-0fe5bdac300f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-241aaea5-1726-4cd7-af88-f4b1e1fdabd7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-241aaea5-1726-4cd7-af88-f4b1e1fdabd7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-241aaea5-1726-4cd7-af88-f4b1e1fdabd7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-241aaea5-1726-4cd7-af88-f4b1e1fdabd7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}],"source":["sample"]},{"cell_type":"code","execution_count":null,"id":"56a5c13f-3491-440b-bee5-85cabe029fbd","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"56a5c13f-3491-440b-bee5-85cabe029fbd","executionInfo":{"status":"ok","timestamp":1658152164268,"user_tz":-120,"elapsed":580,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"d198df84-6e11-4309-c94d-77bae1050bc3"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# plot the manhattan distance between two points\n","# plot rattings\n","plt.scatter(sample['broccoli'], sample['brussels_sprouts'], s=200)\n","\n","# euclidean distance\n","y = [5, 7]\n","x = [5, 8]\n","plt.plot(x, y, c='r')\n","\n","# plt.xlim(-1, 11)\n","# plt.ylim(-1, 11)\n","plt.title('Euclidean distance from broccoli rating to brussel sprouts rating')\n","plt.xlabel('Broccoli rating')\n","plt.ylabel('Brussels sprouts rating')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"766ca330-101b-4bd2-af82-c24ec42086f1","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"766ca330-101b-4bd2-af82-c24ec42086f1","executionInfo":{"status":"ok","timestamp":1658152167120,"user_tz":-120,"elapsed":368,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"7d284700-235c-429f-b578-92dda6fd0b8c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-8aad2c24-984e-49c1-b63b-da580612af9c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8aad2c24-984e-49c1-b63b-da580612af9c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8aad2c24-984e-49c1-b63b-da580612af9c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8aad2c24-984e-49c1-b63b-da580612af9c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}],"source":["sample"]},{"cell_type":"markdown","id":"4b33b99f-e473-4949-a069-690e583ce4a6","metadata":{"id":"4b33b99f-e473-4949-a069-690e583ce4a6"},"source":["#### CHALLENGE: transform the euclidean distance formula to python code (and calculate the euc.dist. between all the students)"]},{"cell_type":"code","execution_count":null,"id":"a9b30015-abf3-4440-95a2-f734fbe2d6ad","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"a9b30015-abf3-4440-95a2-f734fbe2d6ad","executionInfo":{"status":"ok","timestamp":1658152176629,"user_tz":-120,"elapsed":1044,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"073d20c6-ae59-4821-a245-509052d77e8b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff2947d8210>"]},"metadata":{},"execution_count":24},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# can you do the same process than before for all the columns?\n","# create a function to do it for all the users\n","def euclidean_distance(data, student, student_to_compare): \n","    distance = (\n","        pd.DataFrame({\n","            'student_1':data.loc[student,:],\n","            'student_2':data.loc[student_to_compare,:]\n","        })\n","        # applying the formula\n","        .assign(dist_abs = lambda x: (x.student_1 - x.student_2)**2)\n","        .agg({'dist_abs':'sum'})[0]**0.5\n","    )\n","    return distance\n","\n","distances = [[euclidean_distance(df, student, student_to_compare) for student in df.index] for student_to_compare in df.index]\n","eucl_dist = pd.DataFrame(distances, columns=df.index, index=df.index)\n","plt.subplots(figsize=(12, 8))\n","sns.heatmap(eucl_dist)"]},{"cell_type":"code","execution_count":null,"id":"f745a9b8-b66a-4b5c-a42d-e3a5c10058fc","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"f745a9b8-b66a-4b5c-a42d-e3a5c10058fc","executionInfo":{"status":"ok","timestamp":1658152178941,"user_tz":-120,"elapsed":840,"user":{"displayName":"Guillem Perdigo","userId":"04677264432036902014"}},"outputId":"c9800c30-5fd4-4555-e3a0-c2e30dd0b583"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff294812390>"]},"metadata":{},"execution_count":25},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.subplots(figsize=(12, 8))\n","sns.heatmap(manh_dist)"]},{"cell_type":"code","execution_count":null,"id":"b9496d48-0325-4af8-b7be-dfc529ea3111","metadata":{"id":"b9496d48-0325-4af8-b7be-dfc529ea3111"},"outputs":[],"source":["# create a function that given a dataset, returns its distances in a dataframe\n","def get_distances(data, distance_type='euclidean'):\n","    \"\"\"\n","    Given a dataframe, return the distance between all the indexes. \n","    We assume the indexes represents the users/students. \n","    Args: \n","        * dataset \n","        * distance type to perform the operation (euclidean or manhattan)\n","    \"\"\"\n","    if distance_type == 'manhattan': \n","        distances = [[manhattan_distance(data, student, student_to_compare) for student in data.index] for student_to_compare in data.index]\n","    else: \n","        distances = [[euclidean_distance(data, student, student_to_compare) for student in data.index] for student_to_compare in data.index]\n","        \n","    return pd.DataFrame(distances, columns=data.index, index=data.index)\n"]},{"cell_type":"code","execution_count":null,"id":"cbe47ab6-1522-4e60-9d8f-959829750734","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cbe47ab6-1522-4e60-9d8f-959829750734","executionInfo":{"status":"ok","timestamp":1649420037843,"user_tz":-120,"elapsed":460,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}},"outputId":"ddee9e97-4fb7-468a-d284-a7e62a5cbd60"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["student           Akbar    Andreas      Dónal       Hana  Konstantinos  \\\n","student                                                                  \n","Akbar          0.000000  10.246951   8.944272  13.784049     15.842980   \n","Andreas       10.246951   0.000000  11.269428  15.000000     15.099669   \n","Dónal          8.944272  11.269428   0.000000   9.797959     15.588457   \n","Hana          13.784049  15.000000   9.797959   0.000000     15.524175   \n","Konstantinos  15.842980  15.099669  15.588457  15.524175      0.000000   \n","Kristina      12.489996  10.723805  14.422205  17.146428     10.816654   \n","Sabrina       11.135529  11.789826  15.620499  17.888544     16.881943   \n","Sandrine       9.949874  13.711309  12.845233  16.278821     17.378147   \n","Sevgi         11.704700  12.806248  15.842980  16.155494     16.309506   \n","Rias           9.165151  11.357817   2.449490   9.380832     15.132746   \n","Ben           10.816654  11.661904   7.141428  11.357817     11.747340   \n","Joan           9.055385  11.357817  13.266499  13.784049     18.248288   \n","Ranjit        10.440307  12.727922  13.747727  16.643317     10.954451   \n","\n","student        Kristina    Sabrina   Sandrine      Sevgi       Rias  \\\n","student                                                               \n","Akbar         12.489996  11.135529   9.949874  11.704700   9.165151   \n","Andreas       10.723805  11.789826  13.711309  12.806248  11.357817   \n","Dónal         14.422205  15.620499  12.845233  15.842980   2.449490   \n","Hana          17.146428  17.888544  16.278821  16.155494   9.380832   \n","Konstantinos  10.816654  16.881943  17.378147  16.309506  15.132746   \n","Kristina       0.000000  15.165751  14.866069  13.453624  13.784049   \n","Sabrina       15.165751   0.000000  14.247807   9.433981  15.427249   \n","Sandrine      14.866069  14.247807   0.000000  10.000000  13.152946   \n","Sevgi         13.453624   9.433981  10.000000   0.000000  15.000000   \n","Rias          13.784049  15.427249  13.152946  15.000000   0.000000   \n","Ben           10.440307  16.763055  12.649111  15.491933   7.280110   \n","Joan          16.431677  10.770330  13.527749  13.076697  14.000000   \n","Ranjit         8.544004  15.842980  14.696938  14.966630  13.379088   \n","\n","student             Ben       Joan     Ranjit  \n","student                                        \n","Akbar         10.816654   9.055385  10.440307  \n","Andreas       11.661904  11.357817  12.727922  \n","Dónal          7.141428  13.266499  13.747727  \n","Hana          11.357817  13.784049  16.643317  \n","Konstantinos  11.747340  18.248288  10.954451  \n","Kristina      10.440307  16.431677   8.544004  \n","Sabrina       16.763055  10.770330  15.842980  \n","Sandrine      12.649111  13.527749  14.696938  \n","Sevgi         15.491933  13.076697  14.966630  \n","Rias           7.280110  14.000000  13.379088  \n","Ben            0.000000  14.525839   9.797959  \n","Joan          14.525839   0.000000  14.662878  \n","Ranjit         9.797959  14.662878   0.000000  "],"text/html":["\n","  <div id=\"df-1a3ae23f-dac8-47e0-bd5e-33528566bd4f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>student</th>\n","      <th>Akbar</th>\n","      <th>Andreas</th>\n","      <th>Dónal</th>\n","      <th>Hana</th>\n","      <th>Konstantinos</th>\n","      <th>Kristina</th>\n","      <th>Sabrina</th>\n","      <th>Sandrine</th>\n","      <th>Sevgi</th>\n","      <th>Rias</th>\n","      <th>Ben</th>\n","      <th>Joan</th>\n","      <th>Ranjit</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0.000000</td>\n","      <td>10.246951</td>\n","      <td>8.944272</td>\n","      <td>13.784049</td>\n","      <td>15.842980</td>\n","      <td>12.489996</td>\n","      <td>11.135529</td>\n","      <td>9.949874</td>\n","      <td>11.704700</td>\n","      <td>9.165151</td>\n","      <td>10.816654</td>\n","      <td>9.055385</td>\n","      <td>10.440307</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>10.246951</td>\n","      <td>0.000000</td>\n","      <td>11.269428</td>\n","      <td>15.000000</td>\n","      <td>15.099669</td>\n","      <td>10.723805</td>\n","      <td>11.789826</td>\n","      <td>13.711309</td>\n","      <td>12.806248</td>\n","      <td>11.357817</td>\n","      <td>11.661904</td>\n","      <td>11.357817</td>\n","      <td>12.727922</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8.944272</td>\n","      <td>11.269428</td>\n","      <td>0.000000</td>\n","      <td>9.797959</td>\n","      <td>15.588457</td>\n","      <td>14.422205</td>\n","      <td>15.620499</td>\n","      <td>12.845233</td>\n","      <td>15.842980</td>\n","      <td>2.449490</td>\n","      <td>7.141428</td>\n","      <td>13.266499</td>\n","      <td>13.747727</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>13.784049</td>\n","      <td>15.000000</td>\n","      <td>9.797959</td>\n","      <td>0.000000</td>\n","      <td>15.524175</td>\n","      <td>17.146428</td>\n","      <td>17.888544</td>\n","      <td>16.278821</td>\n","      <td>16.155494</td>\n","      <td>9.380832</td>\n","      <td>11.357817</td>\n","      <td>13.784049</td>\n","      <td>16.643317</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>15.842980</td>\n","      <td>15.099669</td>\n","      <td>15.588457</td>\n","      <td>15.524175</td>\n","      <td>0.000000</td>\n","      <td>10.816654</td>\n","      <td>16.881943</td>\n","      <td>17.378147</td>\n","      <td>16.309506</td>\n","      <td>15.132746</td>\n","      <td>11.747340</td>\n","      <td>18.248288</td>\n","      <td>10.954451</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>12.489996</td>\n","      <td>10.723805</td>\n","      <td>14.422205</td>\n","      <td>17.146428</td>\n","      <td>10.816654</td>\n","      <td>0.000000</td>\n","      <td>15.165751</td>\n","      <td>14.866069</td>\n","      <td>13.453624</td>\n","      <td>13.784049</td>\n","      <td>10.440307</td>\n","      <td>16.431677</td>\n","      <td>8.544004</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>11.135529</td>\n","      <td>11.789826</td>\n","      <td>15.620499</td>\n","      <td>17.888544</td>\n","      <td>16.881943</td>\n","      <td>15.165751</td>\n","      <td>0.000000</td>\n","      <td>14.247807</td>\n","      <td>9.433981</td>\n","      <td>15.427249</td>\n","      <td>16.763055</td>\n","      <td>10.770330</td>\n","      <td>15.842980</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>9.949874</td>\n","      <td>13.711309</td>\n","      <td>12.845233</td>\n","      <td>16.278821</td>\n","      <td>17.378147</td>\n","      <td>14.866069</td>\n","      <td>14.247807</td>\n","      <td>0.000000</td>\n","      <td>10.000000</td>\n","      <td>13.152946</td>\n","      <td>12.649111</td>\n","      <td>13.527749</td>\n","      <td>14.696938</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>11.704700</td>\n","      <td>12.806248</td>\n","      <td>15.842980</td>\n","      <td>16.155494</td>\n","      <td>16.309506</td>\n","      <td>13.453624</td>\n","      <td>9.433981</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>15.000000</td>\n","      <td>15.491933</td>\n","      <td>13.076697</td>\n","      <td>14.966630</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>9.165151</td>\n","      <td>11.357817</td>\n","      <td>2.449490</td>\n","      <td>9.380832</td>\n","      <td>15.132746</td>\n","      <td>13.784049</td>\n","      <td>15.427249</td>\n","      <td>13.152946</td>\n","      <td>15.000000</td>\n","      <td>0.000000</td>\n","      <td>7.280110</td>\n","      <td>14.000000</td>\n","      <td>13.379088</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>10.816654</td>\n","      <td>11.661904</td>\n","      <td>7.141428</td>\n","      <td>11.357817</td>\n","      <td>11.747340</td>\n","      <td>10.440307</td>\n","      <td>16.763055</td>\n","      <td>12.649111</td>\n","      <td>15.491933</td>\n","      <td>7.280110</td>\n","      <td>0.000000</td>\n","      <td>14.525839</td>\n","      <td>9.797959</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>9.055385</td>\n","      <td>11.357817</td>\n","      <td>13.266499</td>\n","      <td>13.784049</td>\n","      <td>18.248288</td>\n","      <td>16.431677</td>\n","      <td>10.770330</td>\n","      <td>13.527749</td>\n","      <td>13.076697</td>\n","      <td>14.000000</td>\n","      <td>14.525839</td>\n","      <td>0.000000</td>\n","      <td>14.662878</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>10.440307</td>\n","      <td>12.727922</td>\n","      <td>13.747727</td>\n","      <td>16.643317</td>\n","      <td>10.954451</td>\n","      <td>8.544004</td>\n","      <td>15.842980</td>\n","      <td>14.696938</td>\n","      <td>14.966630</td>\n","      <td>13.379088</td>\n","      <td>9.797959</td>\n","      <td>14.662878</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a3ae23f-dac8-47e0-bd5e-33528566bd4f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1a3ae23f-dac8-47e0-bd5e-33528566bd4f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1a3ae23f-dac8-47e0-bd5e-33528566bd4f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}],"source":["get_distances(df)"]},{"cell_type":"markdown","source":["### Using scikitLearn `pairwise_distances`"],"metadata":{"id":"9Mg2EoqYn1ty"},"id":"9Mg2EoqYn1ty"},{"cell_type":"code","source":["from sklearn.metrics import pairwise_distances\n","\n","# Euclidean (by default)\n","pd.DataFrame(pairwise_distances(df), index=df.index, columns=df.index)\n","\n","# Manhattan\n","# pd.DataFrame(pairwise_distances(df, metric='manhattan'), index=df.index, columns=df.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"cuJiO8-Zn0iK","executionInfo":{"status":"ok","timestamp":1649420037843,"user_tz":-120,"elapsed":6,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}},"outputId":"3dc516ce-9e9a-4564-8d95-f2bdb1508cac"},"id":"cuJiO8-Zn0iK","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["student           Akbar    Andreas      Dónal       Hana  Konstantinos  \\\n","student                                                                  \n","Akbar          0.000000  10.246951   8.944272  13.784049     15.842980   \n","Andreas       10.246951   0.000000  11.269428  15.000000     15.099669   \n","Dónal          8.944272  11.269428   0.000000   9.797959     15.588457   \n","Hana          13.784049  15.000000   9.797959   0.000000     15.524175   \n","Konstantinos  15.842980  15.099669  15.588457  15.524175      0.000000   \n","Kristina      12.489996  10.723805  14.422205  17.146428     10.816654   \n","Sabrina       11.135529  11.789826  15.620499  17.888544     16.881943   \n","Sandrine       9.949874  13.711309  12.845233  16.278821     17.378147   \n","Sevgi         11.704700  12.806248  15.842980  16.155494     16.309506   \n","Rias           9.165151  11.357817   2.449490   9.380832     15.132746   \n","Ben           10.816654  11.661904   7.141428  11.357817     11.747340   \n","Joan           9.055385  11.357817  13.266499  13.784049     18.248288   \n","Ranjit        10.440307  12.727922  13.747727  16.643317     10.954451   \n","\n","student        Kristina    Sabrina   Sandrine      Sevgi       Rias  \\\n","student                                                               \n","Akbar         12.489996  11.135529   9.949874  11.704700   9.165151   \n","Andreas       10.723805  11.789826  13.711309  12.806248  11.357817   \n","Dónal         14.422205  15.620499  12.845233  15.842980   2.449490   \n","Hana          17.146428  17.888544  16.278821  16.155494   9.380832   \n","Konstantinos  10.816654  16.881943  17.378147  16.309506  15.132746   \n","Kristina       0.000000  15.165751  14.866069  13.453624  13.784049   \n","Sabrina       15.165751   0.000000  14.247807   9.433981  15.427249   \n","Sandrine      14.866069  14.247807   0.000000  10.000000  13.152946   \n","Sevgi         13.453624   9.433981  10.000000   0.000000  15.000000   \n","Rias          13.784049  15.427249  13.152946  15.000000   0.000000   \n","Ben           10.440307  16.763055  12.649111  15.491933   7.280110   \n","Joan          16.431677  10.770330  13.527749  13.076697  14.000000   \n","Ranjit         8.544004  15.842980  14.696938  14.966630  13.379088   \n","\n","student             Ben       Joan     Ranjit  \n","student                                        \n","Akbar         10.816654   9.055385  10.440307  \n","Andreas       11.661904  11.357817  12.727922  \n","Dónal          7.141428  13.266499  13.747727  \n","Hana          11.357817  13.784049  16.643317  \n","Konstantinos  11.747340  18.248288  10.954451  \n","Kristina      10.440307  16.431677   8.544004  \n","Sabrina       16.763055  10.770330  15.842980  \n","Sandrine      12.649111  13.527749  14.696938  \n","Sevgi         15.491933  13.076697  14.966630  \n","Rias           7.280110  14.000000  13.379088  \n","Ben            0.000000  14.525839   9.797959  \n","Joan          14.525839   0.000000  14.662878  \n","Ranjit         9.797959  14.662878   0.000000  "],"text/html":["\n","  <div id=\"df-555ccb71-2e21-4b98-9d56-3e65fa939cf5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>student</th>\n","      <th>Akbar</th>\n","      <th>Andreas</th>\n","      <th>Dónal</th>\n","      <th>Hana</th>\n","      <th>Konstantinos</th>\n","      <th>Kristina</th>\n","      <th>Sabrina</th>\n","      <th>Sandrine</th>\n","      <th>Sevgi</th>\n","      <th>Rias</th>\n","      <th>Ben</th>\n","      <th>Joan</th>\n","      <th>Ranjit</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0.000000</td>\n","      <td>10.246951</td>\n","      <td>8.944272</td>\n","      <td>13.784049</td>\n","      <td>15.842980</td>\n","      <td>12.489996</td>\n","      <td>11.135529</td>\n","      <td>9.949874</td>\n","      <td>11.704700</td>\n","      <td>9.165151</td>\n","      <td>10.816654</td>\n","      <td>9.055385</td>\n","      <td>10.440307</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>10.246951</td>\n","      <td>0.000000</td>\n","      <td>11.269428</td>\n","      <td>15.000000</td>\n","      <td>15.099669</td>\n","      <td>10.723805</td>\n","      <td>11.789826</td>\n","      <td>13.711309</td>\n","      <td>12.806248</td>\n","      <td>11.357817</td>\n","      <td>11.661904</td>\n","      <td>11.357817</td>\n","      <td>12.727922</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8.944272</td>\n","      <td>11.269428</td>\n","      <td>0.000000</td>\n","      <td>9.797959</td>\n","      <td>15.588457</td>\n","      <td>14.422205</td>\n","      <td>15.620499</td>\n","      <td>12.845233</td>\n","      <td>15.842980</td>\n","      <td>2.449490</td>\n","      <td>7.141428</td>\n","      <td>13.266499</td>\n","      <td>13.747727</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>13.784049</td>\n","      <td>15.000000</td>\n","      <td>9.797959</td>\n","      <td>0.000000</td>\n","      <td>15.524175</td>\n","      <td>17.146428</td>\n","      <td>17.888544</td>\n","      <td>16.278821</td>\n","      <td>16.155494</td>\n","      <td>9.380832</td>\n","      <td>11.357817</td>\n","      <td>13.784049</td>\n","      <td>16.643317</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>15.842980</td>\n","      <td>15.099669</td>\n","      <td>15.588457</td>\n","      <td>15.524175</td>\n","      <td>0.000000</td>\n","      <td>10.816654</td>\n","      <td>16.881943</td>\n","      <td>17.378147</td>\n","      <td>16.309506</td>\n","      <td>15.132746</td>\n","      <td>11.747340</td>\n","      <td>18.248288</td>\n","      <td>10.954451</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>12.489996</td>\n","      <td>10.723805</td>\n","      <td>14.422205</td>\n","      <td>17.146428</td>\n","      <td>10.816654</td>\n","      <td>0.000000</td>\n","      <td>15.165751</td>\n","      <td>14.866069</td>\n","      <td>13.453624</td>\n","      <td>13.784049</td>\n","      <td>10.440307</td>\n","      <td>16.431677</td>\n","      <td>8.544004</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>11.135529</td>\n","      <td>11.789826</td>\n","      <td>15.620499</td>\n","      <td>17.888544</td>\n","      <td>16.881943</td>\n","      <td>15.165751</td>\n","      <td>0.000000</td>\n","      <td>14.247807</td>\n","      <td>9.433981</td>\n","      <td>15.427249</td>\n","      <td>16.763055</td>\n","      <td>10.770330</td>\n","      <td>15.842980</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>9.949874</td>\n","      <td>13.711309</td>\n","      <td>12.845233</td>\n","      <td>16.278821</td>\n","      <td>17.378147</td>\n","      <td>14.866069</td>\n","      <td>14.247807</td>\n","      <td>0.000000</td>\n","      <td>10.000000</td>\n","      <td>13.152946</td>\n","      <td>12.649111</td>\n","      <td>13.527749</td>\n","      <td>14.696938</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>11.704700</td>\n","      <td>12.806248</td>\n","      <td>15.842980</td>\n","      <td>16.155494</td>\n","      <td>16.309506</td>\n","      <td>13.453624</td>\n","      <td>9.433981</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>15.000000</td>\n","      <td>15.491933</td>\n","      <td>13.076697</td>\n","      <td>14.966630</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>9.165151</td>\n","      <td>11.357817</td>\n","      <td>2.449490</td>\n","      <td>9.380832</td>\n","      <td>15.132746</td>\n","      <td>13.784049</td>\n","      <td>15.427249</td>\n","      <td>13.152946</td>\n","      <td>15.000000</td>\n","      <td>0.000000</td>\n","      <td>7.280110</td>\n","      <td>14.000000</td>\n","      <td>13.379088</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>10.816654</td>\n","      <td>11.661904</td>\n","      <td>7.141428</td>\n","      <td>11.357817</td>\n","      <td>11.747340</td>\n","      <td>10.440307</td>\n","      <td>16.763055</td>\n","      <td>12.649111</td>\n","      <td>15.491933</td>\n","      <td>7.280110</td>\n","      <td>0.000000</td>\n","      <td>14.525839</td>\n","      <td>9.797959</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>9.055385</td>\n","      <td>11.357817</td>\n","      <td>13.266499</td>\n","      <td>13.784049</td>\n","      <td>18.248288</td>\n","      <td>16.431677</td>\n","      <td>10.770330</td>\n","      <td>13.527749</td>\n","      <td>13.076697</td>\n","      <td>14.000000</td>\n","      <td>14.525839</td>\n","      <td>0.000000</td>\n","      <td>14.662878</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>10.440307</td>\n","      <td>12.727922</td>\n","      <td>13.747727</td>\n","      <td>16.643317</td>\n","      <td>10.954451</td>\n","      <td>8.544004</td>\n","      <td>15.842980</td>\n","      <td>14.696938</td>\n","      <td>14.966630</td>\n","      <td>13.379088</td>\n","      <td>9.797959</td>\n","      <td>14.662878</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-555ccb71-2e21-4b98-9d56-3e65fa939cf5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-555ccb71-2e21-4b98-9d56-3e65fa939cf5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-555ccb71-2e21-4b98-9d56-3e65fa939cf5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","id":"22684a50-3c0e-4f2d-8775-d5eccb476be0","metadata":{"id":"22684a50-3c0e-4f2d-8775-d5eccb476be0"},"source":["### Data scaling"]},{"cell_type":"markdown","id":"858df324-ef62-4ba1-a9cf-ef186c3420ef","metadata":{"id":"858df324-ef62-4ba1-a9cf-ef186c3420ef"},"source":["Working with variables with the same range: "]},{"cell_type":"code","execution_count":null,"id":"4cd6c65b-3a43-4541-a8df-2317172448e8","metadata":{"id":"4cd6c65b-3a43-4541-a8df-2317172448e8","outputId":"86d94199-f71c-43b2-d526-a64b8859a9b6","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420038079,"user_tz":-120,"elapsed":241,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              broccoli  brussels_sprouts  hamburger  oysters (raw)  \\\n","student                                                              \n","Akbar                7                 0          5              1   \n","Andreas              7                 7          7              0   \n","Dónal                8                 6          8              5   \n","Hana                 0                 8          8              8   \n","Konstantinos         7                 7          1             10   \n","Kristina             9                 8          0              0   \n","Sabrina              6                 0         10              1   \n","Sandrine            10                 2          8              1   \n","Sevgi                6                 2          9              0   \n","Rias                 8                 6          8              5   \n","Ben                  8                 8          5              4   \n","Joan                 0                 1          8              0   \n","Ranjit               7                 2          0              2   \n","\n","               onion (raw)  peas  olives  blue_cheese  whisky  age  \n","student                                                             \n","Akbar                    3     4       8            8       7   32  \n","Andreas                  7     3       3            5       7   34  \n","Dónal                    1     5       8           10      10   35  \n","Hana                     0     7       9            8       7   31  \n","Konstantinos            10     8      10            2       7   28  \n","Kristina                 7     7       9            2       7   36  \n","Sabrina                  8     0      10            1       5   30  \n","Sandrine                 5     8      10           10       0   41  \n","Sevgi                    5     7      10            1       0   38  \n","Rias                     0     6       8            8      10   33  \n","Ben                      5     9      10            9      10   35  \n","Joan                     7     2       8            9       6   88  \n","Ranjit                   8    10       8            5      10   27  "],"text/html":["\n","  <div id=\"df-c3cea702-c8a1-4885-b59c-b3a9d01214d0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>27</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3cea702-c8a1-4885-b59c-b3a9d01214d0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c3cea702-c8a1-4885-b59c-b3a9d01214d0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c3cea702-c8a1-4885-b59c-b3a9d01214d0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}],"source":["df = pd.read_csv(url, index_col='student')\n","df.drop('favorite_color', axis=1, inplace=True)\n","df"]},{"cell_type":"markdown","id":"338c0a2e-bb18-45a5-9746-f873574aced9","metadata":{"id":"338c0a2e-bb18-45a5-9746-f873574aced9"},"source":["#### Min and Max Scaling"]},{"cell_type":"markdown","id":"5c8351cf-3ec4-4711-8eee-a587ccb97b86","metadata":{"id":"5c8351cf-3ec4-4711-8eee-a587ccb97b86"},"source":["In that case we will use a normalization of minimum and maximum: \n","\n","$$\n","x' = \\frac{x - min(x)}{max(x) - min(x)}\n","$$\n","\n","If we want to normalize the column broccoli, I will take the maximum and minimum value of that column, and then I will look at each individual value to know how for it is for this two values. "]},{"cell_type":"code","execution_count":null,"id":"f48a84d6-2c41-4994-bec3-0b39e55b4139","metadata":{"id":"f48a84d6-2c41-4994-bec3-0b39e55b4139"},"outputs":[],"source":["def min_max_scaling(col): \n","    min_col = min(col)\n","    max_col = max(col)\n","    norm_val = []    \n","    for val in col: \n","        norm_val.append((val - min_col) / (max_col - min_col))\n","    return norm_val"]},{"cell_type":"code","execution_count":null,"id":"c80ae2a8-dd38-4e98-a1df-543d3b66ebe9","metadata":{"id":"c80ae2a8-dd38-4e98-a1df-543d3b66ebe9","outputId":"d47335c9-d0c4-418a-e16f-de4fe4ee8fa3","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420038083,"user_tz":-120,"elapsed":9,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              original  min_max_scaling\n","student                                \n","Akbar                7              0.7\n","Andreas              7              0.7\n","Dónal                8              0.8\n","Hana                 0              0.0\n","Konstantinos         7              0.7\n","Kristina             9              0.9\n","Sabrina              6              0.6\n","Sandrine            10              1.0\n","Sevgi                6              0.6\n","Rias                 8              0.8\n","Ben                  8              0.8\n","Joan                 0              0.0\n","Ranjit               7              0.7"],"text/html":["\n","  <div id=\"df-f7d9777b-fccd-4e55-9e85-55058032d294\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>original</th>\n","      <th>min_max_scaling</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>9</td>\n","      <td>0.9</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>6</td>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>10</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>6</td>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7d9777b-fccd-4e55-9e85-55058032d294')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7d9777b-fccd-4e55-9e85-55058032d294 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7d9777b-fccd-4e55-9e85-55058032d294');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}],"source":["pd.DataFrame({\n","    'original': df.iloc[:,0], \n","    'min_max_scaling': min_max_scaling(df.iloc[:,0])\n","})"]},{"cell_type":"code","execution_count":null,"id":"63cee0c6-b4d9-44aa-92da-d36ae6667bf0","metadata":{"id":"63cee0c6-b4d9-44aa-92da-d36ae6667bf0","outputId":"afef0af4-b903-478f-d550-a6f8ca5ed31c","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420038394,"user_tz":-120,"elapsed":5,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              broccoli  brussels_sprouts  hamburger  oysters (raw)  \\\n","student                                                              \n","Akbar              0.7             0.000        0.5            0.1   \n","Andreas            0.7             0.875        0.7            0.0   \n","Dónal              0.8             0.750        0.8            0.5   \n","Hana               0.0             1.000        0.8            0.8   \n","Konstantinos       0.7             0.875        0.1            1.0   \n","Kristina           0.9             1.000        0.0            0.0   \n","Sabrina            0.6             0.000        1.0            0.1   \n","Sandrine           1.0             0.250        0.8            0.1   \n","Sevgi              0.6             0.250        0.9            0.0   \n","Rias               0.8             0.750        0.8            0.5   \n","Ben                0.8             1.000        0.5            0.4   \n","Joan               0.0             0.125        0.8            0.0   \n","Ranjit             0.7             0.250        0.0            0.2   \n","\n","               onion (raw)  peas    olives  blue_cheese  whisky       age  \n","student                                                                    \n","Akbar                  0.3   0.4  0.714286     0.777778     0.7  0.081967  \n","Andreas                0.7   0.3  0.000000     0.444444     0.7  0.114754  \n","Dónal                  0.1   0.5  0.714286     1.000000     1.0  0.131148  \n","Hana                   0.0   0.7  0.857143     0.777778     0.7  0.065574  \n","Konstantinos           1.0   0.8  1.000000     0.111111     0.7  0.016393  \n","Kristina               0.7   0.7  0.857143     0.111111     0.7  0.147541  \n","Sabrina                0.8   0.0  1.000000     0.000000     0.5  0.049180  \n","Sandrine               0.5   0.8  1.000000     1.000000     0.0  0.229508  \n","Sevgi                  0.5   0.7  1.000000     0.000000     0.0  0.180328  \n","Rias                   0.0   0.6  0.714286     0.777778     1.0  0.098361  \n","Ben                    0.5   0.9  1.000000     0.888889     1.0  0.131148  \n","Joan                   0.7   0.2  0.714286     0.888889     0.6  1.000000  \n","Ranjit                 0.8   1.0  0.714286     0.444444     1.0  0.000000  "],"text/html":["\n","  <div id=\"df-8815a3e7-0734-4d11-af01-fc5b40ba7474\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0.7</td>\n","      <td>0.000</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>0.3</td>\n","      <td>0.4</td>\n","      <td>0.714286</td>\n","      <td>0.777778</td>\n","      <td>0.7</td>\n","      <td>0.081967</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>0.7</td>\n","      <td>0.875</td>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","      <td>0.444444</td>\n","      <td>0.7</td>\n","      <td>0.114754</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>0.8</td>\n","      <td>0.750</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.131148</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0.0</td>\n","      <td>1.000</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.857143</td>\n","      <td>0.777778</td>\n","      <td>0.7</td>\n","      <td>0.065574</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>0.7</td>\n","      <td>0.875</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.8</td>\n","      <td>1.000000</td>\n","      <td>0.111111</td>\n","      <td>0.7</td>\n","      <td>0.016393</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>0.9</td>\n","      <td>1.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.7</td>\n","      <td>0.857143</td>\n","      <td>0.111111</td>\n","      <td>0.7</td>\n","      <td>0.147541</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>0.6</td>\n","      <td>0.000</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.5</td>\n","      <td>0.049180</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>1.0</td>\n","      <td>0.250</td>\n","      <td>0.8</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.8</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.229508</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>0.6</td>\n","      <td>0.250</td>\n","      <td>0.9</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.180328</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>0.8</td>\n","      <td>0.750</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.6</td>\n","      <td>0.714286</td>\n","      <td>0.777778</td>\n","      <td>1.0</td>\n","      <td>0.098361</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>0.8</td>\n","      <td>1.000</td>\n","      <td>0.5</td>\n","      <td>0.4</td>\n","      <td>0.5</td>\n","      <td>0.9</td>\n","      <td>1.000000</td>\n","      <td>0.888889</td>\n","      <td>1.0</td>\n","      <td>0.131148</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0.0</td>\n","      <td>0.125</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.2</td>\n","      <td>0.714286</td>\n","      <td>0.888889</td>\n","      <td>0.6</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>0.7</td>\n","      <td>0.250</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>0.714286</td>\n","      <td>0.444444</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8815a3e7-0734-4d11-af01-fc5b40ba7474')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8815a3e7-0734-4d11-af01-fc5b40ba7474 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8815a3e7-0734-4d11-af01-fc5b40ba7474');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}],"source":["# normalise all the columns on a dataset\n","df_norm = df.apply(min_max_scaling, axis=0).copy()\n","df_norm"]},{"cell_type":"code","execution_count":null,"id":"e9632ea7-83ee-491c-8440-0f3064c79d64","metadata":{"id":"e9632ea7-83ee-491c-8440-0f3064c79d64","outputId":"2cb2ac4c-6bff-4a17-b9fd-3e6eeb83fdce","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1649420039002,"user_tz":-120,"elapsed":612,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["sns.heatmap(get_distances(df))\n","plt.title('No scaling applied')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"379c44d4-f177-4638-9f2a-1f1be8bf92cf","metadata":{"id":"379c44d4-f177-4638-9f2a-1f1be8bf92cf","outputId":"15117e97-96fa-45e9-ef63-4a22fc58f4fb","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1649420039769,"user_tz":-120,"elapsed":772,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["sns.heatmap(get_distances(df_norm))\n","plt.title('Min & Max Scaled')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"2c9a577d-b4d2-4c24-894a-d5ed06393c69","metadata":{"id":"2c9a577d-b4d2-4c24-894a-d5ed06393c69","outputId":"5ba75927-6b95-4a42-bba4-587f0d4077ca","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420039770,"user_tz":-120,"elapsed":9,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              broccoli  brussels_sprouts  hamburger  oysters (raw)  \\\n","student                                                              \n","Akbar                7                 0          5              1   \n","Andreas              7                 7          7              0   \n","Dónal                8                 6          8              5   \n","Hana                 0                 8          8              8   \n","Konstantinos         7                 7          1             10   \n","Kristina             9                 8          0              0   \n","Sabrina              6                 0         10              1   \n","Sandrine            10                 2          8              1   \n","Sevgi                6                 2          9              0   \n","Rias                 8                 6          8              5   \n","Ben                  8                 8          5              4   \n","Joan                 0                 1          8              0   \n","Ranjit               7                 2          0              2   \n","\n","               onion (raw)  peas  olives  blue_cheese  whisky  age  \n","student                                                             \n","Akbar                    3     4       8            8       7   32  \n","Andreas                  7     3       3            5       7   34  \n","Dónal                    1     5       8           10      10   35  \n","Hana                     0     7       9            8       7   31  \n","Konstantinos            10     8      10            2       7   28  \n","Kristina                 7     7       9            2       7   36  \n","Sabrina                  8     0      10            1       5   30  \n","Sandrine                 5     8      10           10       0   41  \n","Sevgi                    5     7      10            1       0   38  \n","Rias                     0     6       8            8      10   33  \n","Ben                      5     9      10            9      10   35  \n","Joan                     7     2       8            9       6   88  \n","Ranjit                   8    10       8            5      10   27  "],"text/html":["\n","  <div id=\"df-196f874c-3dec-4b89-9199-6da6661c40ed\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>8</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>27</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-196f874c-3dec-4b89-9199-6da6661c40ed')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-196f874c-3dec-4b89-9199-6da6661c40ed button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-196f874c-3dec-4b89-9199-6da6661c40ed');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}],"source":["df"]},{"cell_type":"markdown","id":"3557492a-59d1-4d22-b605-a41a1e1985bd","metadata":{"id":"3557492a-59d1-4d22-b605-a41a1e1985bd"},"source":["#### Range Scaling"]},{"cell_type":"markdown","id":"3f96d342-ed6f-45b7-80c2-86b2b366c62d","metadata":{"id":"3f96d342-ed6f-45b7-80c2-86b2b366c62d"},"source":["When we normalise the ratings, we are normalising the values between the minimum and maximum of each column, which should be 0 and 10. \n","But, what happens when no one has given a rate of 0 or 10 to a food?\n","\n","With min/max scaling the minumum and maximum of a column determine the range of that column. This can sometimes lead to obscure results in data. For example, if the lowest score for broccolli was an 8 and the highest was a 9, when we min/max scale broccoli, the 8 will become a 0, and the 9 will become a 1. The 0 and 1 will lead us to believe that these scores were very different, when in reality they were quite similar. In cases where it is appropriate, we can determine the range of our scaling: we can choose 1-10, 1-100, or even 7-99 if we should wish"]},{"cell_type":"markdown","id":"46bb08c1-ebe2-4d88-93fb-19c77568512a","metadata":{"id":"46bb08c1-ebe2-4d88-93fb-19c77568512a"},"source":["##### CHALLENGE: apply a range scaling on your data"]},{"cell_type":"code","execution_count":null,"id":"166da88b-6d50-41f6-9f9e-f5acc1bb5bd0","metadata":{"id":"166da88b-6d50-41f6-9f9e-f5acc1bb5bd0"},"outputs":[],"source":["def range_scaling(col): \n","    min_col = 0\n","    max_col = 10\n","    norm_val = []\n","    for val in col:\n","        norm_val.append((val - min_col) / (max_col - min_col))\n","    return norm_val"]},{"cell_type":"code","execution_count":null,"id":"110ada68-c8ba-4957-8021-7d8bb3dee968","metadata":{"id":"110ada68-c8ba-4957-8021-7d8bb3dee968","outputId":"89635404-9bf7-47ec-da21-7d5f88bb48c1","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420039770,"user_tz":-120,"elapsed":7,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              original  range_scaling\n","student                              \n","Akbar                7            0.7\n","Andreas              7            0.7\n","Dónal                8            0.8\n","Hana                 0            0.0\n","Konstantinos         7            0.7\n","Kristina             9            0.9\n","Sabrina              6            0.6\n","Sandrine            10            1.0\n","Sevgi                6            0.6\n","Rias                 8            0.8\n","Ben                  8            0.8\n","Joan                 0            0.0\n","Ranjit               7            0.7"],"text/html":["\n","  <div id=\"df-c613da9b-9cc7-43cc-9a53-3e60e09aefd6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>original</th>\n","      <th>range_scaling</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>9</td>\n","      <td>0.9</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>6</td>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>10</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>6</td>\n","      <td>0.6</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>8</td>\n","      <td>0.8</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>7</td>\n","      <td>0.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c613da9b-9cc7-43cc-9a53-3e60e09aefd6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c613da9b-9cc7-43cc-9a53-3e60e09aefd6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c613da9b-9cc7-43cc-9a53-3e60e09aefd6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":44}],"source":["pd.DataFrame({\n","    'original': df.iloc[:,0], \n","    'range_scaling': range_scaling(df.iloc[:,0])\n","})"]},{"cell_type":"code","execution_count":null,"id":"4289b70d-279e-4dd6-a00c-64c438f1398c","metadata":{"id":"4289b70d-279e-4dd6-a00c-64c438f1398c","outputId":"24257435-d2a2-4d0b-f0e3-29baa48792a2","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420039771,"user_tz":-120,"elapsed":8,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              broccoli  brussels_sprouts  hamburger  oysters (raw)  \\\n","student                                                              \n","Akbar              0.7               0.0        0.5            0.1   \n","Andreas            0.7               0.7        0.7            0.0   \n","Dónal              0.8               0.6        0.8            0.5   \n","Hana               0.0               0.8        0.8            0.8   \n","Konstantinos       0.7               0.7        0.1            1.0   \n","Kristina           0.9               0.8        0.0            0.0   \n","Sabrina            0.6               0.0        1.0            0.1   \n","Sandrine           1.0               0.2        0.8            0.1   \n","Sevgi              0.6               0.2        0.9            0.0   \n","Rias               0.8               0.6        0.8            0.5   \n","Ben                0.8               0.8        0.5            0.4   \n","Joan               0.0               0.1        0.8            0.0   \n","Ranjit             0.7               0.2        0.0            0.2   \n","\n","               onion (raw)  peas  olives  blue_cheese  whisky       age  \n","student                                                                  \n","Akbar                  0.3   0.4     0.8          0.8     0.7  0.081967  \n","Andreas                0.7   0.3     0.3          0.5     0.7  0.114754  \n","Dónal                  0.1   0.5     0.8          1.0     1.0  0.131148  \n","Hana                   0.0   0.7     0.9          0.8     0.7  0.065574  \n","Konstantinos           1.0   0.8     1.0          0.2     0.7  0.016393  \n","Kristina               0.7   0.7     0.9          0.2     0.7  0.147541  \n","Sabrina                0.8   0.0     1.0          0.1     0.5  0.049180  \n","Sandrine               0.5   0.8     1.0          1.0     0.0  0.229508  \n","Sevgi                  0.5   0.7     1.0          0.1     0.0  0.180328  \n","Rias                   0.0   0.6     0.8          0.8     1.0  0.098361  \n","Ben                    0.5   0.9     1.0          0.9     1.0  0.131148  \n","Joan                   0.7   0.2     0.8          0.9     0.6  1.000000  \n","Ranjit                 0.8   1.0     0.8          0.5     1.0  0.000000  "],"text/html":["\n","  <div id=\"df-18d2c427-833e-484c-8263-85b79e1e9651\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>0.3</td>\n","      <td>0.4</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.7</td>\n","      <td>0.081967</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>0.7</td>\n","      <td>0.7</td>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.3</td>\n","      <td>0.3</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>0.114754</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>0.8</td>\n","      <td>0.6</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.131148</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0.0</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.9</td>\n","      <td>0.8</td>\n","      <td>0.7</td>\n","      <td>0.065574</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>0.7</td>\n","      <td>0.7</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>0.7</td>\n","      <td>0.016393</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>0.9</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.7</td>\n","      <td>0.9</td>\n","      <td>0.2</td>\n","      <td>0.7</td>\n","      <td>0.147541</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>0.6</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.049180</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>1.0</td>\n","      <td>0.2</td>\n","      <td>0.8</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.229508</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>0.6</td>\n","      <td>0.2</td>\n","      <td>0.9</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>0.0</td>\n","      <td>0.180328</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>0.8</td>\n","      <td>0.6</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.6</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>0.098361</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.4</td>\n","      <td>0.5</td>\n","      <td>0.9</td>\n","      <td>1.0</td>\n","      <td>0.9</td>\n","      <td>1.0</td>\n","      <td>0.131148</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0.0</td>\n","      <td>0.1</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.2</td>\n","      <td>0.8</td>\n","      <td>0.9</td>\n","      <td>0.6</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>0.7</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18d2c427-833e-484c-8263-85b79e1e9651')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-18d2c427-833e-484c-8263-85b79e1e9651 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-18d2c427-833e-484c-8263-85b79e1e9651');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}],"source":["df_scaled = df.drop('age', axis=1).apply(range_scaling).copy()\n","df_scaled['age'] = min_max_scaling(df['age'])\n","df_scaled"]},{"cell_type":"code","execution_count":null,"id":"452fafc3-1f90-477f-b93c-6caf8ca69ce7","metadata":{"id":"452fafc3-1f90-477f-b93c-6caf8ca69ce7","outputId":"00ced3e2-e4a4-466d-dba4-333af2c1f83f","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1649420040489,"user_tz":-120,"elapsed":725,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["sns.heatmap(get_distances(df_scaled))\n","plt.title('Min & Max + Range Scaling')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"0da9856c-e81e-4c9b-9e91-d1f9cb4ac8ed","metadata":{"id":"0da9856c-e81e-4c9b-9e91-d1f9cb4ac8ed","outputId":"1606d69e-2a01-4419-a75c-11dd6e05fcf3","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1649420041359,"user_tz":-120,"elapsed":875,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["sns.heatmap(get_distances(df_norm))\n","plt.title('Min & Max Scaled')\n","plt.show()"]},{"cell_type":"markdown","id":"735b1351-f8cf-4676-acff-eef9a62fe4a2","metadata":{"id":"735b1351-f8cf-4676-acff-eef9a62fe4a2"},"source":["### Scaling with scikit learn"]},{"cell_type":"code","execution_count":null,"id":"864f5954-e95b-491c-bad6-6d995f8d26a4","metadata":{"id":"864f5954-e95b-491c-bad6-6d995f8d26a4","outputId":"56ae04d6-f781-48d3-f8ed-86e22256f7d0","colab":{"base_uri":"https://localhost:8080/","height":488},"executionInfo":{"status":"ok","timestamp":1649420041360,"user_tz":-120,"elapsed":10,"user":{"displayName":"Hana Lacic","userId":"03901848044717845615"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              broccoli  brussels_sprouts  hamburger  oysters (raw)  \\\n","student                                                              \n","Akbar              0.7             0.000        0.5            0.1   \n","Andreas            0.7             0.875        0.7            0.0   \n","Dónal              0.8             0.750        0.8            0.5   \n","Hana               0.0             1.000        0.8            0.8   \n","Konstantinos       0.7             0.875        0.1            1.0   \n","Kristina           0.9             1.000        0.0            0.0   \n","Sabrina            0.6             0.000        1.0            0.1   \n","Sandrine           1.0             0.250        0.8            0.1   \n","Sevgi              0.6             0.250        0.9            0.0   \n","Rias               0.8             0.750        0.8            0.5   \n","Ben                0.8             1.000        0.5            0.4   \n","Joan               0.0             0.125        0.8            0.0   \n","Ranjit             0.7             0.250        0.0            0.2   \n","\n","               onion (raw)  peas    olives  blue_cheese  whisky       age  \n","student                                                                    \n","Akbar                  0.3   0.4  0.714286     0.777778     0.7  0.081967  \n","Andreas                0.7   0.3  0.000000     0.444444     0.7  0.114754  \n","Dónal                  0.1   0.5  0.714286     1.000000     1.0  0.131148  \n","Hana                   0.0   0.7  0.857143     0.777778     0.7  0.065574  \n","Konstantinos           1.0   0.8  1.000000     0.111111     0.7  0.016393  \n","Kristina               0.7   0.7  0.857143     0.111111     0.7  0.147541  \n","Sabrina                0.8   0.0  1.000000     0.000000     0.5  0.049180  \n","Sandrine               0.5   0.8  1.000000     1.000000     0.0  0.229508  \n","Sevgi                  0.5   0.7  1.000000     0.000000     0.0  0.180328  \n","Rias                   0.0   0.6  0.714286     0.777778     1.0  0.098361  \n","Ben                    0.5   0.9  1.000000     0.888889     1.0  0.131148  \n","Joan                   0.7   0.2  0.714286     0.888889     0.6  1.000000  \n","Ranjit                 0.8   1.0  0.714286     0.444444     1.0  0.000000  "],"text/html":["\n","  <div id=\"df-e1b23509-f82f-4c71-ac22-d4896292785f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","      <th>age</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Akbar</th>\n","      <td>0.7</td>\n","      <td>0.000</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>0.3</td>\n","      <td>0.4</td>\n","      <td>0.714286</td>\n","      <td>0.777778</td>\n","      <td>0.7</td>\n","      <td>0.081967</td>\n","    </tr>\n","    <tr>\n","      <th>Andreas</th>\n","      <td>0.7</td>\n","      <td>0.875</td>\n","      <td>0.7</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.3</td>\n","      <td>0.000000</td>\n","      <td>0.444444</td>\n","      <td>0.7</td>\n","      <td>0.114754</td>\n","    </tr>\n","    <tr>\n","      <th>Dónal</th>\n","      <td>0.8</td>\n","      <td>0.750</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.131148</td>\n","    </tr>\n","    <tr>\n","      <th>Hana</th>\n","      <td>0.0</td>\n","      <td>1.000</td>\n","      <td>0.8</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.857143</td>\n","      <td>0.777778</td>\n","      <td>0.7</td>\n","      <td>0.065574</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantinos</th>\n","      <td>0.7</td>\n","      <td>0.875</td>\n","      <td>0.1</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.8</td>\n","      <td>1.000000</td>\n","      <td>0.111111</td>\n","      <td>0.7</td>\n","      <td>0.016393</td>\n","    </tr>\n","    <tr>\n","      <th>Kristina</th>\n","      <td>0.9</td>\n","      <td>1.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.7</td>\n","      <td>0.857143</td>\n","      <td>0.111111</td>\n","      <td>0.7</td>\n","      <td>0.147541</td>\n","    </tr>\n","    <tr>\n","      <th>Sabrina</th>\n","      <td>0.6</td>\n","      <td>0.000</td>\n","      <td>1.0</td>\n","      <td>0.1</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.5</td>\n","      <td>0.049180</td>\n","    </tr>\n","    <tr>\n","      <th>Sandrine</th>\n","      <td>1.0</td>\n","      <td>0.250</td>\n","      <td>0.8</td>\n","      <td>0.1</td>\n","      <td>0.5</td>\n","      <td>0.8</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.229508</td>\n","    </tr>\n","    <tr>\n","      <th>Sevgi</th>\n","      <td>0.6</td>\n","      <td>0.250</td>\n","      <td>0.9</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.180328</td>\n","    </tr>\n","    <tr>\n","      <th>Rias</th>\n","      <td>0.8</td>\n","      <td>0.750</td>\n","      <td>0.8</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.6</td>\n","      <td>0.714286</td>\n","      <td>0.777778</td>\n","      <td>1.0</td>\n","      <td>0.098361</td>\n","    </tr>\n","    <tr>\n","      <th>Ben</th>\n","      <td>0.8</td>\n","      <td>1.000</td>\n","      <td>0.5</td>\n","      <td>0.4</td>\n","      <td>0.5</td>\n","      <td>0.9</td>\n","      <td>1.000000</td>\n","      <td>0.888889</td>\n","      <td>1.0</td>\n","      <td>0.131148</td>\n","    </tr>\n","    <tr>\n","      <th>Joan</th>\n","      <td>0.0</td>\n","      <td>0.125</td>\n","      <td>0.8</td>\n","      <td>0.0</td>\n","      <td>0.7</td>\n","      <td>0.2</td>\n","      <td>0.714286</td>\n","      <td>0.888889</td>\n","      <td>0.6</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Ranjit</th>\n","      <td>0.7</td>\n","      <td>0.250</td>\n","      <td>0.0</td>\n","      <td>0.2</td>\n","      <td>0.8</td>\n","      <td>1.0</td>\n","      <td>0.714286</td>\n","      <td>0.444444</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1b23509-f82f-4c71-ac22-d4896292785f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e1b23509-f82f-4c71-ac22-d4896292785f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e1b23509-f82f-4c71-ac22-d4896292785f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}],"source":["from sklearn.preprocessing import MinMaxScaler\n","\n","# What does it mean fit_transform?\n","df_sk_pre = MinMaxScaler().fit_transform(df)\n","pd.DataFrame(df_sk_pre, columns=df.columns, index=df.index)"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"provenance":[{"file_id":"11rs-9Xc4V5nRKMIODIA6RBxQfJ_a-TjQ","timestamp":1668504494149},{"file_id":"1z6fXA0gA6HHd5yx9dlVEy76ZTcAx36Rk","timestamp":1649335323974}],"collapsed_sections":["338c0a2e-bb18-45a5-9746-f873574aced9","3557492a-59d1-4d22-b605-a41a1e1985bd"]}},"nbformat":4,"nbformat_minor":5}